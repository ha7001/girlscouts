{% extends 'base.twig' %}

{% block title %}Cancellation Test{% endblock %}
{% block css %}
    <style type="text/css">
        img.img-responsive {
            margin: 0 auto;
        }
        .step h3.popover-title {
            margin-bottom: 0;
        }
    </style>
{% endblock %}
{% block content %}
    <div class="container">
        <div class="row">
            <div class="col-md-12 main-title">
            </div>
        </div>
    </div>

    <section class="container" id="main">

        <!-- Start Survey container -->
        <div id="survey_container">
            <form name="cancellationTest" id="wrapped" >
                <!-- Eye Test start -->
                <div id="middle-wizard">
                    <div class="step">
                        <div class="row">
                            <div class="col-md-14" style="text-align: center">
                                <h4>{{cancellationTestInstructions1|raw }}</h4>
                            </div>
                        </div>
                    </div><!--Instructions-->
                    <div class="step">
                        <div class="row">
                            <div class="col-md-14" style="text-align: center">
                                <h4>{{cancellationTestInstructions2|raw }}</h4>
                            </div>
                        </div>
                    </div><!--Instructions-->
                    <div class="step">
                        <div class="row">
                            <div class="col-md-14" style="text-align: center">
                                <h4>{{cancellationTestInstructions3|raw }}</h4>
                            </div>
                        </div>
                    </div><!--Instructions-->

                    <!-- Practice Block Test -->
                    <div class="step row">
                        <div class="col-md-12">
                            <h4>{{ cancellationTestPractice | raw }}</h4>
                            <canvas id="cancelCanvasPractice1" class="center-block" width="800" height="300" style="border:1px solid #000000;"></canvas><br/>
                            <button id="startCancellationPracticeButton" type="button" class="btn center-block">{{ cancellationTestStartPracticeTest | raw}}</button>
                        </div>
                    </div>

                    <!--Actual Testing -->
                    <div class="step row">
                        <div class="col-md-12">
                            <h4>{{ cancellationTestTesting | raw }}</h4>
                            <canvas id="cancelCanvas" class="center-block" width="800" height="300" style="border:1px solid #000000;"></canvas><br/>
                            <button id="startCancellation" type="button" class="btn center-block" id="startCancellation">{{ cancellationTestStartTest |raw }}</button>
                        </div>
                    </div>


                    <div class="submit step" id="complete">
                        <i class="icon-check"></i>
                        <h3>{{ UniversalTestComplete | raw }}</h3>
                        <button type="submit" name="process" class="submit">{{ UniversalSubmit | raw }}</button>
                    </div><!-- end submit step -->
                </div>

                <div id="bottom-wizard">
                    <button id="backwardButton" type="button" name="backward" class="backward">{{ UniversalBackward | raw }}</button>
                    <button id="forwardButton" type="button" name="forward" class="forward">{{ UniversalForward | raw }}</button>
                </div><!-- end bottom-wizard -->
            </form>
        </div><!-- end Survey container -->
    </section>
{% endblock %}
{% block extra %}{% endblock %}
{% block script %}
    <script type="text/javascript" src="/assets/js/jcanvas.min.js"></script>
    <script>
        function callNativeApp () {
            try {
                webkit.messageHandlers.callbackHandler.postMessage("camera");
            } catch(err) {
                console.log('The native context does not exist yet');
            }
        }

        var testStartTime = 0;
        var correctSubmission = 0;
        var incorrectSubmission = 1;
        var clickData = [];
        var userID = getUrlVars()['id'];

        //Test Blocks
        var blk0 =   [['5', 'X', 'N', 'W', 'A', 'W', 'V', '0', 'Q', 'N', '5', '9', 'C', '2', 'B', 'Y', 'V', 'E', '5', 'Q'],
                        ['P', '8', 'V', '9', 'J', '9', '2', '7', '5', '2', 'C', 'A', '1', 'C', 'W', '9', '6', 'R', '0', 'D'],
                        ['G', 'R', '5', '6', 'Q', 'F', 'L', '9', '8', 'G', '9', 'Y', '2', 'Z', 'T', 'G', '5', '1', 'H', '2']];
        var blk1 =   [['B', 'A', '1', '3', 'R', '3', 'Q', '6', '2', '9', 'N', 'W', 'V', 'W', 'I', 'H', '9', '5', '1', '5'],
                        ['B', '9', 'C', '9', 'E', 'V', 'E', 'S', '5', '0', '7', 'F', '7', 'L', 'C', 'V', 'Q', '9', 'T', '6'],
                        ['W', 'T', '5', 'H', 'H', 'C', 'C', '5', 'B', 'J', '5', 'Z', 'L', 'X', '5', 'T', 'J', '8', 'Y', 'X']];
        var blk2 =   [['8', '3', '8', 'V', 'Y', 'G', '9', '6', 'K', '9', 'V', '5', 'C', '9', 'D', 'I', '3', 'G', '6', 'T'],
                        ['J', 'A', 'P', '5', 'A', 'C', '9', 'M', '6', 'L', 'D', '9', '8', 'X', '6', '0', 'F', 'I', 'J', '5'],
                        ['9', '9', 'V', '5', 'X', '0', 'W', '3', '9', '6', '1', 'C', '2', '2', '6', '6', 'A', '4', 'P', '4']];
        var blk3 =  [['5', '2', 'I', '5', 'S', 'G', '2', 'R', '1', 'G', 'V', 'D', 'K', '9', '9', '7', 'M', 'R', 'E', 'B'],
                        ['U', 'M', '6', '7', 'Y', '5', 'W', 'P', 'T', '9', 'X', '2', '0', 'C', 'A', 'B', '9', 'L', '6', '5'],
                        ['R', 'D', 'F', '7', 'D', 'K', '4', '9', 'F', 'I', '2', 'M', '9', 'Y', '9', 'N', 'K', 'T', '5', '2']];
        var blk4 =   [['9', 'R', 'X', '7', 'W', 'F', '7', '5', 'P', 'F', '9', 'D', 'Q', '1', '8', 'R', 'P', '5', '8', 'X'],
                        ['E', '4', 'N', 'D', 'R', 'Z', 'D', '3', '3', '9', '5', '3', 'R', '0', '9', 'U', '3', '9', 'E', 'P'],
                        ['G', '8', '8', '2', '5', 'A', '1', '0', '9', 'T', '5', '1', '6', 'S', '4', '0', 'X', 'B', '3', '5']];
        var blk5 =   [['7', '5', 'X', 'H', '5', '4', '8', '9', 'R', 'J', '6', '9', 'P', 'Y', 'S', 'A', '0', 'F', 'Q', '1'],
                        ['M', '9', '2', '3', '3', '9', '6', '5', '2', 'C', 'W', 'S', '7', '6', '4', '6', '9', '2', '1', '8'],
                        ['P', 'C', '5', '9', '6', '5', 'Q', 'Z', '8', '3', '2', 'L', '1', 'A', 'R', 'D', '5', '1', 'Q', 'S']];
        var blk6 =   [['H', '5', '3', '7', 'W', '8', '9', 'M', 'S', '5', '9', 'I', '3', 'D', 'T', 'I', 'F', 'J', 'G', '0'],
                        ['2', 'K', 'H', 'U', 'S', '7', 'P', 'G', '1', '4', '9', '5', 'A', '9', '5', 'F', 'G', '3', '3', 'K'],
                        ['I', '2', '9', 'Q', 'L', '2', '1', '9', 'X', '8', 'D', 'B', '2', 'P', '9', '9', 'N', '1', 'V', 'Y']];
        var blk7 =   [['9', 'Z', 'X', '7', 'A', 'L', '8', 'B', 'F', 'A', '5', '5', '9', 'L', '7', 'V', '1', 'G', 'J', 'W'],
                        ['N', 'L', 'Q', '2', 'U', 'A', 'D', 'Y', 'B', 'Q', '5', '4', 'Z', '9', 'F', 'G', '5', 'L', 'Z', '5'],
                        ['0', '9', '6', '0', 'M', '9', 'I', 'H', '2', 'D', 'A', '1', 'Y', '7', '5', 'F', 'M', '9', '7', 'Q']];
        var blk8 =   [['H', 'N', '9', 'Z', '8', 'K', 'U', 'P', '9', 'Z', 'F', '9', '8', 'L', 'T', '0', 'F', '5', 'M', '1'],
                        ['1', 'B', 'D', '9', 'A', 'A', 'T', 'E', 'R', 'R', 'P', 'J', 'A', '5', '7', '9', 'H', '5', 'S', '3'],
                        ['K', '9', '0', 'F', 'H', 'Y', '7', 'K', 'D', 'X', 'G', '9', '5', '5', 'A', '0', '8', 'A', '2', '7']];
        var blk9 =   [['Y', '6', 'K', 'M', '9', 'H', 'T', 'M', '9', '0', 'Y', 'K', 'L', 'A', '9', '4', 'R', '8', '2', '9'],
                        ['X', '3', '1', 'M', 'K', 'U', 'D', 'X', 'L', '9', 'T', 'Y', 'L', '5', 'Q', 'T', 'G', '5', 'V', '5'],
                        ['7', 'M', '0', '2', 'X', '6', '4', '6', 'D', '7', 'C', 'P', 'R', '9', '5', '9', 'L', 'A', '9', 'W']];
        var blk10 =   [['I', 'N', 'F', '5', '5', 'T', '4', 'H', '9', 'Y', 'K', 'W', 'F', 'W', '6', 'G', '4', 'Q', 'V', '5'],
                        ['M', 'F', 'B', '9', '8', '9', 'N', '1', '8', 'A', 'V', 'V', '9', 'E', '8', 'T', '9', 'V', 'U', '1'],
                        ['W', 'D', 'Q', 'D', 'Z', 'T', '4', 'D', 'M', '3', '3', '9', '2', '9', '2', 'T', '9', '3', '9', '7']];
        var blk11 =   [['5', 'Y', '7', '4', 'G', 'K', '9', '8', 'J', '3', 'F', 'E', '5', 'I', '6', 'V', '5', 'F', 'S', 'A'],
                        ['5', 'D', '5', 'M', '0', 'P', 'P', 'T', 'I', '7', 'M', '9', '9', 'V', '3', '0', 'V', '4', '6', 'H'],
                        ['T', 'D', '9', '5', '8', '0', 'Z', 'Q', 'D', 'K', 'U', '9', 'Y', '4', 'K', 'A', 'X', '1', '9', '1']];
        //Extra block
        var blk12 =   [['C', '6', 'Q', 'R', 'I', '8', 'T', '7', 'T', '2', '5', 'I', '6', 'P', '0', 'B', '9', '9', '9', 'C'],
                        ['5', 'U', '3', '5', 'C', '7', 'R', 'Z', '6', 'M', '1', 'T', '9', 'Q', '5', '8', 'F', 'I', 'N', 'X'],
                        ['8', 'P', 'J', '9', '9', 'P', '5', 'I', 'C', '0', '5', 'U', '7', 'U', 'Z', 'C', '3', 'B', '4', '6']];




        var testBlocks = [blk0, blk1, blk2, blk3, blk4, blk5, blk6, blk7, blk8, blk9, blk10, blk11, blk12];

        //Display start button for practice test
        $(document).ready(function() {
            var $select = $('#startCancellationPracticeButton');
            $select.click(function() {
                startPracticeTesting1();
            });
            //Display start button for actual testing
            var $select = $('#startCancellation');
            $select.click(function() {
                startTesting();
                $('#forwardButton').prop('disabled', true);
                $('#backwardButton').prop('disabled', true);
            });

            //Submission of test
            $('form').on('submit', function(e) {

                var data = {
                    incorrectSubmissionCount: incorrectSubmission,
                    correctSubmissionCount: correctSubmission,
                    clickData: clickData
                };

                $.post("http://api.girlscouts.harryatwal.com/participant/" + userID + "/cancellationTest", data)
                        .done(function (o) {
                            console.log('saved');
                        });

                callNativeApp();
                e.preventDefault();
            });
        });

        //Practice Test kickoff Method
        function startPracticeTesting1(){
            $('#forwardButton').prop('disabled', true);
            $('#backwardButton').prop('disabled', true);
            $('#startCancellationPracticeButton').html('{{ cancellationTestPractice2 | raw }}'); //Change text in button
            createBlkTestPractice(testBlocks[0], '0');
            $('#startCancellationPracticeButton').click(startPracticeTesting2);
        }
        function startPracticeTesting2(){
            $('#startCancellationPracticeButton').html('{{ cancellationTestPractice3 | raw }}'); //Change text in button
            createBlkTestPractice(testBlocks[1], '0');
            $('#startCancellationPracticeButton').click(practiceTestComplete);
            //$('#startCancellationPracticeButton').prop('disabled', true); //Disable Start button
        }
        //Clear canvas for actual testing and tigger forward button
        function practiceTestComplete(){
            $('canvas').removeLayers($('canvas').getLayers()).drawLayers(); //remove all layers
            $('#forwardButton').prop('disabled', true);
            $('#backwardButton').prop('disabled', true);
            $('#forwardButton').trigger('click');
        }

        //Actual Testing kickoff
        function startTesting(){
            //The timeing for this method is preset. Once the test begins, all the test blocks will automatically display
            $('#startCancellation').remove();
            createBlkTest(testBlocks[2], '1');
            resultsCompleteVar = setTimeout(completeMessage, 15000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[3], '2');}, 18000);
            resultsCompleteVar = setTimeout(completeMessage, 33000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[4], '3');}, 36000);
            resultsCompleteVar = setTimeout(completeMessage, 51000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[5], '4');}, 54000);
            resultsCompleteVar = setTimeout(completeMessage, 69000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[6], '5');}, 72000);
            resultsCompleteVar = setTimeout(completeMessage, 87000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[7], '6');}, 90000);
            resultsCompleteVar = setTimeout(completeMessage, 105000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[8], '7');}, 108000);
            resultsCompleteVar = setTimeout(completeMessage, 123000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[9], '8');}, 126000);
            resultsCompleteVar = setTimeout(completeMessage, 141000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[10], '9');}, 144000);
            resultsCompleteVar = setTimeout(completeMessage, 159000);
            resultsCompleteVar = setTimeout(function(){createBlkTest(testBlocks[11], '10');}, 162000);
            resultsCompleteVar = setTimeout(testComplete, 177000);

        }

        //Main function that will create TestBlocks
        function createBlkTest(TestBlock, testBlockNumber){
            console.log("Create test called " + testBlockNumber + " , clearing block");
            $('canvas').removeLayers($('canvas').getLayers()).drawLayers(); //remove all layers
            var x = 75; var y = 50;
            for (var row = 0; row < TestBlock.length; row++) {
                for (var i = 0; i < TestBlock[row].length; i++) {
                    //console.log('Drawing it ' + TestBlock[row][i]);
                    $('canvas').drawText({
                        layer: true,
                        name: 'TestBlock_' + row + '_' + i,
                        fillStyle: 'black',
                        x: x, y: y,
                        data:{
                            block: 'practice',
                            locationX: x,
                            locationY: y,
                            testBlockRow: row,
                            testBlockCol: i
                        },
                        fontSize: 40,
                        fontFamily: 'Courier',
                        text: TestBlock[row][i],
                        click: function (layer) {
                            if(layer.fillStyle != 'rgb( 255,0,0 )') {
                                //console.log("Fill style is " + layer.fillStyle);
//                                console.log("Storage variables: " );
//                                console.log("Test Block Number: " + testBlockNumber.toString());
//                                console.log("Test row: " + layer.data.testBlockRow);
//                                console.log("Test col: " + layer.data.testBlockCol);
//                                console.log("Test click variable: " + layer.text);
//                                console.log("Test block variable: " + testBlockNumber);
                                storeClick(testBlockNumber.toString(), layer.data.testBlockRow, layer.data.testBlockCol, layer.text, Math.abs(testStartTime - (new Date).getTime()));

                            }
                            $(this).animateLayer(layer, {
                                fillStyle: 'rgb( 255,0,0 )',
                                scale: 1.5
                            },0);
                        }
                    });
                    x = x + 35;//Space it out a little bit more
                }
                x = 75;
                y = y + 100;
            }
            //Start Timer
            testStartTime = (new Date).getTime();
            //resultsCompleteVar = setTimeout(function() {gatherResults0()}, 5000);
            //resultsCompleteVar = setTimeout(completeMessagePractice, 15000);
        }
        //Practice Test block is like a normal test block but doesn't record data
        function createBlkTestPractice(TestBlock, testBlockNumber){
            console.log("Create test called " + testBlockNumber + " , clearing block");
            $('canvas').removeLayers($('canvas').getLayers()).drawLayers(); //remove all layers
            var x = 75; var y = 50;
            for (var row = 0; row < TestBlock.length; row++) {
                for (var i = 0; i < TestBlock[row].length; i++) {
                    //console.log('Drawing it ' + TestBlock[row][i]);
                    $('canvas').drawText({
                        layer: true,
                        name: 'TestBlock_' + row + '_' + i,
                        fillStyle: 'black',
                        x: x, y: y,
                        data:{
                            block: 'practice',
                            locationX: x,
                            locationY: y,
                            testBlockRow: row,
                            testBlockCol: i
                        },
                        fontSize: 40,
                        fontFamily: 'Courier',
                        text: TestBlock[row][i],
                        click: function (layer) {
                            $(this).setLayer(layer, {
                                fillStyle: 'red',
                                scale: 1.5
                            }).drawLayers();
                        }
                    });
                    x = x + 35;//Space it out a little bit more
                }
                x = 75;
                y = y + 100;
            }
            //Start Timer
            testStartTime = (new Date).getTime();
        }
        //Message Methods
        function completeMessagePractice(){
            $('canvas').removeLayers($('canvas').getLayers()).drawLayers(); //remove all layers
            $('canvas').drawText({
                layer: true,
                name: 'TestCompleteP0',
                fillStyle: '#000000',
                x: 400, y: 120,
                fontSize: 40,
                fontFamily: 'Ariel',
                text: 'Congrats on finishing the Practice test!'
            });
            $('canvas').drawText({
                layer: true,
                name: 'TestCompleteP1',
                fillStyle: '#000000',
                x: 400, y: 170,
                fontSize: 40,
                fontFamily: 'Ariel',
                text: 'Click "Start Test" to being the test.'
            });
            $('canvas').drawLayers();
            //Click the forward button to move to the next test.
            testComplete();
        }
        function completeMessage(){
            $('canvas').removeLayers($('canvas').getLayers()).drawLayers(); //remove all layers
            $('canvas').drawText({
                layer: true,
                name: 'TestComplete0',
                fillStyle: '#000000',
                x: 400, y: 120,
                fontSize: 40,
                fontFamily: 'Ariel',
                text: 'Block Complete.'
            });
            $('canvas').drawText({
                layer: true,
                name: 'TestComplete1',
                fillStyle: '#000000',
                x: 400, y: 170,
                fontSize: 40,
                fontFamily: 'Ariel',
                text: 'The next Block will begin in   seconds.'
            });
            $('canvas').drawText({
                layer: true,
                name: 'TestComplete3',
                fillStyle: '#000000',
                x: 562, y: 170,
                fontSize: 40,
                fontFamily: 'Ariel',
                text: '3'
            });
            setTimeout(function(){$('canvas').setLayer('TestComplete3', {text: '2'}).drawLayers();}, 1000);
            setTimeout(function(){$('canvas').setLayer('TestComplete3', {text: '1'}).drawLayers();}, 2000);
        }

        function changeLayer(textToChange){
            $('canvas').setLayer('TestComplete3', {text: textToChange}).drawLayers();
        }

        function testComplete() {
            console.log("testCompleteCalled");
            $('#forwardButton').trigger('click');
        }

        function storeClick(block, blockRow, blockCol, blockValue, timeV )
        {
            //Parse through and see what letter was actually clicked. Store incorrect click count and correct click counts
            if(blockValue == '5' || blockValue == '9'){
                correctSubmission += 1;
            }
            else{
                incorrectSubmission += 1;
            }
            //Add this data to the arrays that will be submitted at the end of the survey. 
            var submissionData = {
                block: block,
                blockRow: blockRow,
                blockCol: blockCol,
                blockValue: blockValue,
                timeV: timeV
            };
            clickData.push(submissionData);
        }



        function returnCodeFromDBstore(data, textStatus, jqXHRobject){
            console.log(data);
            console.log(textStatus);
            console.log(jqXHRobject);
        }

        function clearCanvas(){
            $('canvas').removeLayers($('canvas').getLayers()).drawLayers(); //remove all layers
        }

    </script>
{% endblock %}
