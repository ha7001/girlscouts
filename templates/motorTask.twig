{% extends 'base.twig' %}
{% block title %} motorTitle {% endblock %}
{% block css %}
    <style type="text/css">
        img.img-responsive {
            margin: 0 auto;
        }

        .step h3.popover-title {
            margin-bottom: 0;
        }
    </style>
{% endblock %}
{% block content %}
    <!-- BIG TODO: The act of forceing the user to the next test seems to interrupt the drawing process. This means the lines the user drawn
     won't get saved and therefore are lost. Unless the user lifts their finger. Need to find a way to store the points immediatly?  -->



    <!--
    <div class="container">
        <div class="row">
            <div class="col-md-12 main-title">
                <h1>{{ motorTitle }}</h1>
            </div>
        </div>
    </div>
    -->
    <section class="container" id="main">

        <!-- Start Survey container -->
        <div id="survey_container">
            <!--
            <div id="top-wizard">
                <strong>Progress <span id="location"></span></strong>
                <div id="progressbar"></div>
                <div class="shadow"></div>
            </div><!-- end top-wizard -->

            <form name="motorTask" id="wrapped" action="" method="POST">
                <div id="middle-wizard">
                    <!-- Motor Task one instructions -->
                    <div class="step row">
                        <div class="col-md-12">
                            <h4>
                                {{ motorInstructions1 | raw }}
                            </h4>
                        </div>
                    </div>
                    <!-- Motor Task one Dominant -->
                    <div class="step row">
                        <div class="row">
                            <div class="col-xs-10">
                                <h4>{{ motorInstructionsDominant | raw }}</h4>
                            </div>
                            <div class="col-xs-2">
                                <h4>
                                    <span id="counter1a">15</span> second(s).
                                </h4>
                            </div>
                        </div>
                        <div id="canvas-drawing">
                            <canvas id='motorTaskOneDominant1a' class="center-block" width="850" height="600" style="border:1px solid #000000;"></canvas>
                            <!-- Button to start the motor task -->
                            <button id="MotorTask1a" type="button" class="btn center-block">Start Test</button>
                            <!--setInterval(countdown(), 10) -->
                        </div>
                    </div>
                    <!-- Motor Task one Non-Dominant -->
                    <div class="step row">
                        <div class="col-xs-10">
                            <h4>{{ motorInstructionsNonDominant | raw }}</h4>
                        </div>
                        <div class="col-xs-2">
                            <h4>
                                <span id="counter1b">15</span> second(s).
                            </h4>
                        </div>

                        <div id="canvas-drawing">
                            <canvas id='motorTaskOneDominant1b' class="center-block" width="850" height="600" style="border:1px solid #000000;"></canvas>
                            <button id="MotorTask1b" type="button" class="btn center-block">Start Test</button>
                        </div>
                    </div>

                    <!-- Motor Task two instructions -->
                    <div class="step row">
                        <div class="col-md-12">
                            <p>
                                {{ motorInstructions2 | raw }}
                            </p>
                        </div>
                    </div>
                    <!-- Motor Task two Dominant -->
                    <div class="step row">
                        <div class="col-xs-10">
                            <h4>{{ motorInstructionsDominant | raw }}</h4>
                        </div>
                        <div class="col-xs-2">
                            <h4>
                                <span id="counter2a">15</span> second(s).
                            </h4>
                        </div>

                        <div id="canvas-drawing">
                            <canvas id='motorTaskOneDominant2a' class="center-block" width="611" height="542" style="border:1px solid #000000;"></canvas>
                            <button id="MotorTask2a" type="button" class="btn center-block">Start Test</button>
                        </div>
                    </div>
                    <!-- Motor Task two Non-Dominant -->
                    <div class="step row">
                        <div class="col-xs-10">
                            <h4>{{ motorInstructionsNonDominant | raw }}</h4>
                        </div>
                        <div class="col-xs-2">
                            <h4>
                                <span id="counter2b">15</span> second(s).
                            </h4>
                        </div>

                        <div id="canvas-drawing">
                            <canvas id='motorTaskOneDominant2b' class="center-block" width="611" height="542" style="border:1px solid #000000;"></canvas>
                            <button id="MotorTask2b" type="button" class="btn center-block">Start Test</button>
                        </div>
                    </div>


                    <!-- Motor Task three instructions -->
                    <div class="step row">
                        <div class="col-md-12">
                            <p>
                                {{ motorInstructions3 | raw }}
                            </p>
                        </div>
                    </div>
                    <!-- Motor Task three Dominant -->
                    <div class="step row">
                        <div class="col-xs-10">
                            <h4>{{ motorInstructionsDominant | raw }}</h4>
                        </div>
                        <div class="col-xs-2">
                            <h4>
                                <span id="counter3a">15</span> second(s).
                            </h4>
                        </div>

                        <div id="canvas-drawing">
                            <canvas id='motorTaskOneDominant3a' class="center-block" width="850" height="600" style="border:1px solid #000000;"></canvas>
                            <button id="MotorTask3a" type="button" class="btn center-block">Start Test</button>
                        </div>
                    </div>
                    <!-- Motor Task three Non-Dominant -->
                    <div class="step row">
                        <div class="col-xs-10">
                            <h4>{{ motorInstructionsNonDominant | raw }}</h4>
                        </div>
                        <div class="col-xs-2">
                            <h4>
                                <span id="counter3b">15</span> second(s).
                            </h4>
                        </div>

                        <div id="canvas-drawing">
                            <canvas id='motorTaskOneDominant3b' class="center-block" width="850" height="600" style="border:1px solid #000000;"></canvas>
                            <button id="MotorTask3b" type="button" class="btn center-block">Start Test</button>
                        </div>
                    </div>


                    <div class="submit step" id="complete">
                        <i class="icon-check"></i>
                        <h3>Test complete!</h3>
                        <button type="submit" name="process" class="submit">Submit</button>
                    </div><!-- end submit step -->
                </div>

                <div id="bottom-wizard">
                     <button id="backwardButton" type="button" name="backward" class="backward" >Backward</button>
                    <button id="forwardButton" type="button" name="forward" class="forward">Forward</button>
                </div><!-- end bottom-wizard -->
            </form>
        </div><!-- end Survey container -->
    </section>
{% endblock %}
{% block extra %}{% endblock %}
{% block script %}
    <script type="text/javascript" src="/assets/js/jcanvas.min.js"></script>
    <script type="text/javascript" src="/assets/js/jTimer.js"></script>
    <script>
        var timerId1a;
        var timerId1b;
        var timerId2a;
        var timerId2b;
        var timerId3a;
        var timerId3b;

        $(document).ready(function () {
            //Setup Drawing Steps
            var $motorTaskOneDominant1a = $("#motorTaskOneDominant1a");
            var $motorTaskOneDominant1b = $("#motorTaskOneDominant1b");
            var $motorTaskOneDominant2a = $("#motorTaskOneDominant2a");
            var $motorTaskOneDominant2b = $("#motorTaskOneDominant2b");
            var $motorTaskOneDominant3a = $("#motorTaskOneDominant3a");
            var $motorTaskOneDominant3b = $("#motorTaskOneDominant3b");
            var pts1a = [];
            var lines1a = [];
            var line_obj1a = {};
            var isDown1a = false;
            $motorTaskOneDominant1a.drawRect({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                fromCenter: false,
                mousedown: function (layer) {
                    line_obj1a = {
                        strokeStyle: "#000",
                        strokeWidth: 2,
                        data: {
                            joints: 1
                        }
                    };

                    isDown1a = true;
                    pts1a.push([layer.eventX, layer.eventY]);
                },
                mousemove: function (layer) {
                    if (isDown1a) {
                        pts1a.push([layer.eventX, layer.eventY]);
                        for (var p = 0; p < pts1a.length; p += 1) {
                            line_obj1a['x' + (p + 1)] = pts1a[p][0];
                            line_obj1a['y' + (p + 1)] = pts1a[p][1];
                        }
                        $motorTaskOneDominant1a.drawLine(line_obj1a);
                    }
                    for (var i = 0; i < lines1a.length; i++) {
                        $motorTaskOneDominant1a.drawLine(lines1a[i]);
                    }
                },
                mouseup: function (layer) {
                    lines1a.push(line_obj1a);

                    for (var i = 0; i < lines1a.length; i++) {
                        $motorTaskOneDominant1a.drawLine(lines1a[i]);
                    }
                    line_obj1a = {};
                    pts1a = [];
                    isDown1a = false;
                },
                mouseout: function (layer) {
                    console.log(lines1a);

                    for (var i = 0; i < lines1a.length; i++) {
                        $motorTaskOneDominant1a.drawLine(lines1a[i]);
                    }
                }
            });
            var pts1b = [];
            var lines1b = [];
            var line_obj1b = {};
            var isDown1b = false;
            $motorTaskOneDominant1b.drawRect({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                fromCenter: false,
                mousedown: function (layer) {
                    line_obj1b = {
                        strokeStyle: "#000",
                        strokeWidth: 2,
                        data: {
                            joints: 1
                        }
                    };

                    isDown1b = true;
                    pts1b.push([layer.eventX, layer.eventY]);
                },
                mousemove: function (layer) {
                    if (isDown1b) {
                        pts1b.push([layer.eventX, layer.eventY]);
                        for (var p = 0; p < pts1b.length; p += 1) {
                            line_obj1b['x' + (p + 1)] = pts1b[p][0];
                            line_obj1b['y' + (p + 1)] = pts1b[p][1];
                        }
                        $motorTaskOneDominant1b.drawLine(line_obj1b);
                    }
                    for (var i = 0; i < lines1b.length; i++) {
                        $motorTaskOneDominant1b.drawLine(lines1b[i]);
                    }
                },
                mouseup: function (layer) {
                    lines1b.push(line_obj1b);

                    for (var i = 0; i < lines1b.length; i++) {
                        $motorTaskOneDominant1b.drawLine(lines1b[i]);
                    }
                    line_obj1b = {};
                    pts1b = [];
                    isDown1b = false;
                },
                mouseout: function (layer) {
                    console.log(lines1b);

                    for (var i = 0; i < lines1b.length; i++) {
                        $motorTaskOneDominant1b.drawLine(lines1b[i]);
                    }
                }
            });

            $motorTaskOneDominant2a.drawRect({
                layer: true,
                x: 0, y: 0,
                width: 800, height: 500,
                fromCenter: false,
                mousedown: function (layer) {
                    $(this).addLayer({
                        type: 'rectangle',
                        fillStyle: '#585',
                        x: layer.eventX, y: layer.eventY,
                        width: 10, height: 10
                    }).drawLayers();
                },
                mouseup: function (layer) {
                    drawLayers();
                }
            });

            $motorTaskOneDominant2b.drawRect({
                layer: true,
                x: 0, y: 0,
                width: 800, height: 500,
                fromCenter: false,
                mousedown: function (layer) {
                    $(this).addLayer({
                        type: 'rectangle',
                        fillStyle: '#585',
                        x: layer.eventX, y: layer.eventY,
                        width: 10, height: 10
                    }).drawLayers();
                },
                mouseup: function (layer) {
                    drawLayers();
                }
            });

            $motorTaskOneDominant3a.drawRect({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                fromCenter: false,
                mousedown: function (layer) {
                    $(this).addLayer({
                        type: 'rectangle',
                        fillStyle: '#585',
                        x: layer.eventX, y: layer.eventY,
                        width: 10, height: 10
                    }).drawLayers();
                },
                mouseup: function (layer) {
                    drawLayers();
                }
            });

            $motorTaskOneDominant3b.drawRect({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                fromCenter: false,
                mousedown: function (layer) {
                    $(this).addLayer({
                        type: 'rectangle',
                        fillStyle: '#585',
                        x: layer.eventX, y: layer.eventY,
                        width: 10, height: 10
                    }).drawLayers();
                },
                mouseup: function (layer) {
                    drawLayers();
                }
            });

            //Draw respective images onto canvases.
            var $motor1a = $('#MotorTask1a');
            var $motor1b = $('#MotorTask1b');
            var $motor2a = $('#MotorTask2a');
            var $motor2b = $('#MotorTask2b');
            var $motor3a = $('#MotorTask3a');
            var $motor3b = $('#MotorTask3b');

            $motor1a.click(function () {
                setupMotorTask1a();
                var $i = $('#counter1a');
                $i.text(15);
                timerId1a = setInterval(countdown1a, 1000);

            });
            $motor1b.click(function () {
                setupMotorTask1b();
                var $i = $('#counter1b');
                $i.text(15);
                timerId = setInterval(countdown1b, 1000);
            });
            $motor2a.click(function () {
                setupMotorTask2a();
                var $i = $('#counter2a');
                $i.text(15);
                timerId = setInterval(countdown2a, 1000);
            });
            $motor2b.click(function () {
                setupMotorTask2b();
                var $i = $('#counter2b');
                $i.text(15);
                timerId = setInterval(countdown2b, 1000);
            });
            $motor3a.click(function () {
                setupMotorTask3a();
                var $i = $('#counter3a');
                $i.text(15);
                timerId = setInterval(countdown3a, 1000);
            });
            $motor3b.click(function () {
                setupMotorTask3b();
                var $i = $('#counter3b');
                $i.text(15);
                timerId = setInterval(countdown3b, 1000);
            });0
        });


        //Setup the MotorTask 1 and start the timer
        function setupMotorTask1a() {
            var $motorTaskOneDominant1a = $("#motorTaskOneDominant1a");
            $motorTaskOneDominant1a.drawImage({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                index: 0,
                source: "/assets/img/motorTasks/Trazado.png",
                fromCenter: false
            }).drawLayers();
        }
        function setupMotorTask1b() {
            var $motorTaskOneDominant1b = $("#motorTaskOneDominant1b");
            $motorTaskOneDominant1b.drawImage({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                index: 0,
                source: "/assets/img/motorTasks/Trazado.png",
                fromCenter: false
            }).drawLayers();
        }
        function setupMotorTask2a() {
            var $motorTaskOneDominant2a = $("#motorTaskOneDominant2a");
            $motorTaskOneDominant2a.drawImage({
                layer: true,
                x: 0, y: 0,
                width: 611, height: 542,
                index: 0,
                source: "/assets/img/motorTasks/Marcado.png",
                fromCenter: false
            }).drawLayers();
        }
        function setupMotorTask2b() {
            var $motorTaskOneDominant2b = $("#motorTaskOneDominant2b");
            $motorTaskOneDominant2b.drawImage({
                layer: true,
                x: 0, y: 0,
                width: 611, height: 542,
                index: 0,
                source: "/assets/img/motorTasks/Marcado.png",
                fromCenter: false
            }).drawLayers();
        }
        function setupMotorTask3a() {
            var $motorTaskOneDominant3a = $("#motorTaskOneDominant3a");
            $motorTaskOneDominant3a.drawImage({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                index: 0,
                source: "/assets/img/motorTasks/Punteado.png",
                fromCenter: false
            }).drawLayers();
        }
        function setupMotorTask3b() {
            var $motorTaskOneDominant3b = $("#motorTaskOneDominant3b");
            $motorTaskOneDominant3b.drawImage({
                layer: true,
                x: 0, y: 0,
                width: 850, height: 600,
                index: 0,
                source: "/assets/img/motorTasks/Punteado.png",
                fromCenter: false
            }).drawLayers();
        }


        <!--Timer Stuff -->
        function countdown1a() {
            var $i = $('#counter1a');
            $i.text(parseInt($i.text()) - 1);
            if ($i.text() == 0) {
                clearInterval(timerId1a);
                var $forwardButton = $('#forwardButton');
                $forwardButton.click();
            }
        }
        function countdown1b() {
            var $i = $('#counter1b');
            $i.text(parseInt($i.text()) - 1);
            if ($i.text() == 0) {
                clearInterval(timerId1b);
                var $forwardButton = $('#forwardButton');
                $forwardButton.click();
            }
        }
        function countdown2a() {
            var $i = $('#counter2a');
            $i.text(parseInt($i.text()) - 1);
            if ($i.text() == 0) {
                clearInterval(timerId2a);
                var $forwardButton = $('#forwardButton');
                $forwardButton.click();
            }
        }
        function countdown2b() {
            var $i = $('#counter2b');
            $i.text(parseInt($i.text()) - 1);
            if ($i.text() == 0) {
                clearInterval(timerId2b);
                var $forwardButton = $('#forwardButton');
                $forwardButton.click();
            }
        }
        function countdown3a() {
            var $i = $('#counter3a');
            $i.text(parseInt($i.text()) - 1);
            if ($i.text() == 0) {
                clearInterval(timerId3a);
                var $forwardButton = $('#forwardButton');
                $forwardButton.click();
            }
        }
        function countdown3b() {
            var $i = $('#counter3b');
            $i.text(parseInt($i.text()) - 1);
            if ($i.text() == 0) {
                clearInterval(timerId3b);
                var $forwardButton = $('#forwardButton');
                $forwardButton.click();
            }
        }
    </script>
{% endblock %}
